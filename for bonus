void	render_fps_box(t_mlx *mlx, int fps)
{
	void	*box;

	box = mlx_new_image(mlx->mlx, 100, 100);
	my_put_image(mlx, &(t_xy){0, 0}, &(t_wh){90, 20, 0}, box);
	mlx_string_put(mlx->mlx, mlx->win, 10, 10, 0xFFFFFFFF, "FPS:");
	mlx_string_put(mlx->mlx, mlx->win, 50, 10, 0xFFFFFFFF, ft_itoa(fps));
	mlx_destroy_image(mlx->mlx, box);
}
int	move_render(void *param)
{
	static clock_t	last_time = 0;
	clock_t			current_time;
	double			fps;
	t_mlx			*mlx;

	mlx = (t_mlx *)param;
	move_player(mlx);
	rotate_player(mlx);
	fov_details(mlx);
	render_weapon(mlx);
	my_put_image(mlx, &(t_xy){WINDOW_HEIGHT / 2 - 30, WINDOW_WIDTH / 2 - 64},
		&(t_wh){64, 64, 1}, mlx->weapon->crosshair);
	current_time = clock();
	fps = CLOCKS_PER_SEC / (double)(current_time - last_time);
	last_time = current_time;
	render_fps_box(mlx, fps);
	return (SUCCESS);
}